{"version":3,"sources":["sounds/button-start.mp3","sounds/button-stop.mp3","sounds/button-reset.mp3","sounds/button-clear.mp3","App.jsx","index.js"],"names":["timeFormat","time","hh","Math","floor","mm","ss","msms","Lap","lap","App","useState","timer","setTimer","timerState","setTimerState","startTime","setStartTime","timerAcc","setTimerAcc","localStorage","laps","JSON","parse","setLaps","useSound","startMp3","playSound","stopMp3","stopSound","resetMp3","resetSound","clearMp3","clearSound","useEffect","startTimeValue","Date","now","intervalId","setInterval","timerValue","clearInterval","stringify","className","onClick","reversed","length","map","lapIndex","ReactDOM","render","document","getElementById"],"mappings":"8MAAe,MAA0B,yCCA1B,MAA0B,wCCA1B,MAA0B,yCCA1B,MAA0B,yC,OCQnCA,EAAa,SAACC,GAClB,IAAIC,EAAKC,KAAKC,MAAMH,EAAI,MACpBC,EAAK,KACPA,EAAK,IAAMA,GAEb,IAAIG,EAAKF,KAAKC,MAAOH,EAAO,IAAO,GAAM,IACrCI,EAAK,KACPA,EAAK,IAAMA,GAEb,IAAIC,EAAKH,KAAKC,MAAOH,EAAO,IAAQ,IAChCK,EAAK,KACPA,EAAK,IAAMA,GAEb,IAAIC,EAAOJ,KAAKC,MAAMH,EAAO,KAQ7B,OAPIM,EAAO,KAAOA,EAAO,IACvBA,EAAO,IAAMA,EACJA,EAAO,IAAMA,EAAO,IAC7BA,EAAO,KAAOA,EACLA,EAAO,KAChBA,EAAO,MAAQA,GAEX,GAAN,OAAUL,EAAV,YAAgBG,EAAhB,YAAsBC,EAAtB,YAA4BC,IAGxBC,EAAM,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACb,OAAO,6BAAKT,EAAWS,MA4GVC,EAzGH,WAAO,IAAD,EACUC,mBAAS,GADnB,mBACTC,EADS,KACFC,EADE,OAEoBF,mBAAS,WAF7B,mBAETG,EAFS,KAEGC,EAFH,OAGkBJ,mBAAS,GAH3B,mBAGTK,EAHS,KAGEC,EAHF,OAIgBN,mBAAS,GAJzB,mBAITO,EAJS,KAICC,EAJD,OAKQR,mBACpBS,aAAaC,KAAOC,KAAKC,MAAMH,aAAaC,MAAQ,IANxC,mBAKTA,EALS,KAKHG,EALG,OASIC,YAASC,GAAtBC,EATS,sBAUIF,YAASG,GAAtBC,EAVS,sBAWKJ,YAASK,GAAvBC,EAXS,sBAYKN,YAASO,GAAvBC,EAZS,oBA8ChB,OAFAC,qBA9BkB,WAChB,GAAmB,QAAfpB,EAAsB,CACxB,IAAMqB,EAAiBnB,GAAaoB,KAAKC,MACzCpB,EAAakB,GACb,IAAMG,EAAaC,aAAY,WAC7B,IACIC,EADgBJ,KAAKC,MACMF,EACzBjB,IACJsB,GAA0BtB,GAE5BL,EAAS2B,KACR,GACH,OAAO,WACLC,cAAcH,IAEQ,SAAfxB,EACLE,IACFC,EAAa,GACbE,EAAYP,GACZY,EAAQ,CAACZ,GAAF,mBAAYS,KACnBD,aAAaC,KAAOC,KAAKoB,UAAL,CAAgB9B,GAAhB,mBAA0BS,MAExB,UAAfP,IACTC,EAAc,WACdF,EAAS,GACTI,EAAa,GACbE,EAAY,OAOd,sBAAKwB,UAAU,gBAAf,UACE,oBAAIA,UAAU,QAAd,SAAuB3C,EAAWY,KAClC,sBAAK+B,UAAU,gBAAf,UACE,wBACEA,UAA0B,SAAf7B,EAAwB,eAAiB,YACpD8B,QAAS,WACP7B,EAAc,OACdY,KAJJ,SAOkB,SAAfb,EAAwB,WAAa,UAExC,wBACE6B,UAAU,WACVC,QACiB,YAAf9B,EACI,KACA,WACEC,EAAc,QACdc,KAPV,kBAaA,wBACEc,UAAU,YACVC,QAAS,WACP7B,EAAc,SACdgB,KAJJ,sBAUF,qBAAIY,UAAU,OAAOE,UAAQ,EAA7B,UACIxB,EAAKyB,OAEHzB,EAAK0B,KAAI,SAACtC,EAAKuC,GACb,OAAO,cAAC,EAAD,CAAKvC,IAAKA,GAAU,QAAUuC,EAAW,OAFlD,gBAID3B,EAAKyB,QACN,wBACEH,UAAU,YACVC,QAAS,WACPX,IACAT,EAAQ,WACDJ,aAAaC,MALxB,+BCxHV4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.955f3dc2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/button-start.7de102d2.mp3\";","export default __webpack_public_path__ + \"static/media/button-stop.5ed80d01.mp3\";","export default __webpack_public_path__ + \"static/media/button-reset.b54c377f.mp3\";","export default __webpack_public_path__ + \"static/media/button-clear.20a42090.mp3\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport useSound from \"use-sound\";\r\nimport startMp3 from \"./sounds/button-start.mp3\";\r\nimport stopMp3 from \"./sounds/button-stop.mp3\";\r\nimport resetMp3 from \"./sounds/button-reset.mp3\";\r\nimport clearMp3 from \"./sounds/button-clear.mp3\";\r\n\r\nconst timeFormat = (time) => {\r\n  let hh = Math.floor(time / (1000 * 60 * 60));\r\n  if (hh < 10) {\r\n    hh = \"0\" + hh;\r\n  }\r\n  let mm = Math.floor((time / 1000 / 60) % 60);\r\n  if (mm < 10) {\r\n    mm = \"0\" + mm;\r\n  }\r\n  let ss = Math.floor((time / 1000) % 60);\r\n  if (ss < 10) {\r\n    ss = \"0\" + ss;\r\n  }\r\n  let msms = Math.floor(time % 1000);\r\n  if (msms > 100 && msms < 1000) {\r\n    msms = \"0\" + msms;\r\n  } else if (msms > 10 && msms < 100) {\r\n    msms = \"00\" + msms;\r\n  } else if (msms < 10) {\r\n    msms = \"000\" + msms;\r\n  }\r\n  return `${hh}:${mm}:${ss}:${msms}`;\r\n};\r\n\r\nconst Lap = ({ lap }) => {\r\n  return <li>{timeFormat(lap)}</li>;\r\n};\r\n\r\nconst App = () => {\r\n  const [timer, setTimer] = useState(0);\r\n  const [timerState, setTimerState] = useState(\"initial\");\r\n  const [startTime, setStartTime] = useState(0);\r\n  const [timerAcc, setTimerAcc] = useState(0);\r\n  const [laps, setLaps] = useState(\r\n    !!localStorage.laps ? JSON.parse(localStorage.laps) : []\r\n  );\r\n\r\n  const [playSound] = useSound(startMp3);\r\n  const [stopSound] = useSound(stopMp3);\r\n  const [resetSound] = useSound(resetMp3);\r\n  const [clearSound] = useSound(clearMp3);\r\n\r\n  const timerFunc = () => {\r\n    if (timerState === \"run\") {\r\n      const startTimeValue = startTime || Date.now();\r\n      setStartTime(startTimeValue);\r\n      const intervalId = setInterval(() => {\r\n        const currentTime = Date.now();\r\n        let timerValue = currentTime - startTimeValue;\r\n        if (!!timerAcc) {\r\n          timerValue = timerValue + timerAcc;\r\n        }\r\n        setTimer(timerValue);\r\n      }, 1);\r\n      return () => {\r\n        clearInterval(intervalId);\r\n      };\r\n    } else if (timerState === \"stop\") {\r\n      if (startTime) {\r\n        setStartTime(0);\r\n        setTimerAcc(timer);\r\n        setLaps([timer, ...laps]);\r\n        localStorage.laps = JSON.stringify([timer, ...laps]);\r\n      }\r\n    } else if (timerState === \"reset\") {\r\n      setTimerState(\"initial\");\r\n      setTimer(0);\r\n      setStartTime(0);\r\n      setTimerAcc(0);\r\n    }\r\n  };\r\n\r\n  useEffect(timerFunc);\r\n\r\n  return (\r\n    <div className=\"timer_wrapper\">\r\n      <h2 className=\"timer\">{timeFormat(timer)}</h2>\r\n      <div className=\"btn_container\">\r\n        <button\r\n          className={timerState === \"stop\" ? \"continue_btn\" : \"start_btn\"}\r\n          onClick={() => {\r\n            setTimerState(\"run\");\r\n            playSound();\r\n          }}\r\n        >\r\n          {timerState === \"stop\" ? \"Continue\" : \"Start\"}\r\n        </button>\r\n        <button\r\n          className=\"stop_btn\"\r\n          onClick={\r\n            timerState === \"initial\"\r\n              ? null\r\n              : () => {\r\n                  setTimerState(\"stop\");\r\n                  stopSound();\r\n                }\r\n          }\r\n        >\r\n          Stop\r\n        </button>\r\n        <button\r\n          className=\"reset_btn\"\r\n          onClick={() => {\r\n            setTimerState(\"reset\");\r\n            resetSound();\r\n          }}\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n      <ol className=\"laps\" reversed>\r\n        {!laps.length\r\n          ? \"No laps yet\"\r\n          : laps.map((lap, lapIndex) => {\r\n              return <Lap lap={lap} key={\"lap_\" + (lapIndex + 1)} />;\r\n            })}\r\n        {!!laps.length && (\r\n          <button\r\n            className=\"clear_btn\"\r\n            onClick={() => {\r\n              clearSound();\r\n              setLaps([]);\r\n              delete localStorage.laps;\r\n            }}\r\n          >\r\n            Clear laps\r\n          </button>\r\n        )}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}